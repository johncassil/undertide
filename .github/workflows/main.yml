name: Publish undertide image to ghcr.io

on:
  push:
    branches: ['main']

env:
  GH_REGISTRY: ghcr.io
  GCP_REGISTRY: us-east1-docker.pkg.dev
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get Version from file
        id: get-version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.VERSION

      - name: Configure Git
        run: |
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config user.name "$GITHUB_ACTOR"

      - name: Set Reftag
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.get-version.outputs.content }}
          tag_prefix: ""

      - name: Cut Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          automatic_release_tag: ${{ steps.get-version.outputs.content }}
          title: ${{ steps.get-version.outputs.content }}
          files: LICENSE

      - name: Login To Github Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up build cache
        uses: actions/cache@v2
        with:
          path: /tmp/.build-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64, linux/arm64
          push: true
          cache-from: type=local,src=/tmp/.build-cache
          cache-to: type=local,dest=/tmp/.build-cache
          tags: |
            ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.content }}
          labels: ${{ steps.meta.outputs.labels }}
